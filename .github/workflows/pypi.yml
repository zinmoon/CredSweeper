# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Publish to PyPi

on:
  push:
    branches: [ release-test ]
  pull_request:
    branches: [ release-test ]
  release:
    types: [ released ]

jobs:
  release:
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Build
      id: build
      uses: samsung/supplychainassurance/.github/workflows/python_releasor.yml@seperate-builder
      with:
        version: "3.10"
        upload: {{ 'release' == github.event_name }}

    - name: Generate Provenance
      if: ${{ 'release' == github.event_name }}
      id: genprvn
      uses: samsung/supplychainassurance/.github/actions/slsa_release.yml@v1.0.1
      with:
        hash: "${{ steps.build.outputs.hash }}"
        artifact: "${{ steps.build.outputs.artifact }}"
        build_cmd: "${{ steps.build.outputs.build_command }}"
      secrets:
        EXPECTED_REPOSITORY: "${{ secrets.EXPECTED_REPOSITORY }}"
        ECODETOKEN: "${{ secrets.ECODE_TOKEN }}"

    - name: Upload Assets
      if: ${{ 'release' == github.event_name }}
      uses: samsung/supplychainassurance/.github/actions/upload-release-asset@v1.0.1
      env:
        GITHUBTOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifacts: ${{ steps.genprvn.outputs.artifacts }}

  deploy:
    if: ${{ 'release' == github.event_name }}
    runs-on: ubuntu-latest
    needs: [ release ]
    steps:
    - name: Download Artifacts
      id: download
      uses: samsung/supplychainassurance/.github/actions/download-artifact@v1.0.1
      with:
        hash: ${{ needs.release.outputs.hash }}

    - name: Publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd ${{ steps.download.outputs.outdir }}
        twine upload ${{ needs.release.outputs.artifact }}

    - name: Test for creation sphinx documentations
      run: |
        python --version
        pip install -r requirements.txt
        cd docs
        pip install -r requirements.txt
        make html
